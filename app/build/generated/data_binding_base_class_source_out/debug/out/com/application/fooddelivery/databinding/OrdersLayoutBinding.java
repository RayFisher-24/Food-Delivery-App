// Generated by view binder compiler. Do not edit!
package com.application.fooddelivery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.application.fooddelivery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrdersLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView orderId;

  @NonNull
  public final ImageView orderImg;

  @NonNull
  public final TextView orderName;

  @NonNull
  public final TextView orderPrice;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView6;

  private OrdersLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView orderId,
      @NonNull ImageView orderImg, @NonNull TextView orderName, @NonNull TextView orderPrice,
      @NonNull TextView textView3, @NonNull TextView textView4, @NonNull TextView textView6) {
    this.rootView = rootView;
    this.orderId = orderId;
    this.orderImg = orderImg;
    this.orderName = orderName;
    this.orderPrice = orderPrice;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrdersLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrdersLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.orders_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrdersLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.orderId;
      TextView orderId = ViewBindings.findChildViewById(rootView, id);
      if (orderId == null) {
        break missingId;
      }

      id = R.id.orderImg;
      ImageView orderImg = ViewBindings.findChildViewById(rootView, id);
      if (orderImg == null) {
        break missingId;
      }

      id = R.id.orderName;
      TextView orderName = ViewBindings.findChildViewById(rootView, id);
      if (orderName == null) {
        break missingId;
      }

      id = R.id.orderPrice;
      TextView orderPrice = ViewBindings.findChildViewById(rootView, id);
      if (orderPrice == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new OrdersLayoutBinding((LinearLayout) rootView, orderId, orderImg, orderName,
          orderPrice, textView3, textView4, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
